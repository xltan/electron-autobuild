name: Release

on:
  push:

jobs:
  build1:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: macos-latest
            name: "darwin-x64"
          # - host: windows-latest
          #   name: "win32-ia32"

    name: stable - ${{ matrix.settings.name }} - node@16
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        shell: bash

    steps:
      # - uses: actions/checkout@v3

      # - uses: actions/checkout@v3
      #   with:
      #     repository: xltan/build-tools
      #     path: build-tools

      # - name: Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16

      # - name: Install build-tools
      #   run: npm install

      # - uses: sinoru/actions-setup-xcode@v2
      #   with:
      #     xcode-version: "12.4"

      # - name: Init
      #   run: |
      #     npx e init release -i release --root=electron --fork xltan/electron --force

      - name: Cache electron
        id: cache-electron
        uses: actions/cache@v3
        with:
          path: electron
          key: ${{ runner.os }}-${{ hashFiles('package.json') }}-electron-1

      - name: Test
        working-directory: electron
        run: touch 123 & pid=$! ; sleep 1s && kill $pid || true

      # - uses: actions/checkout@v3
      #   if: steps.cache-electron.outputs.cache-hit != 'true'
      #   with:
      #     repository: xltan/electron
      #     path: electron/src/electron
      #     ref: v18.3.5
      #     fetch-depth: 0

      # - name: Apply patches
      #   if: steps.cache-electron.outputs.cache-hit != 'true'
      #   working-directory: electron/src/electron
      #   run: |
      #     git cherry-pick origin/custom-electron

      # - name: Sync
      #   if: steps.cache-electron.outputs.cache-hit != 'true'
      #   run: |
      #     npx e sync

      # - name: Build
      #   if: steps.cache-electron.outputs.cache-hit != 'true'
      #   run: |
      #     npx e build electron:symbols & pid=$! ; sleep 14400 && kill $pid || true

  build2:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: macos-latest
            name: "darwin-x64"
          # - host: windows-latest
          #   name: "win32-ia32"

    name: stable - ${{ matrix.settings.name }} - node@16
    needs:
      - build1
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        shell: bash

    steps:
      # - uses: actions/checkout@v3

      # - uses: actions/checkout@v3
      #   with:
      #     repository: xltan/build-tools
      #     path: build-tools

      # - name: Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16

      # - name: Install build-tools
      #   run: npm install

      # - uses: sinoru/actions-setup-xcode@v2
      #   with:
      #     xcode-version: "12.4"

      # - name: Init
      #   run: |
      #     npx e init release -i release --root=electron --fork xltan/electron --force

      - name: Cache electron 2
        id: cache-electron-2
        uses: actions/cache@v3
        with:
          path: electron
          key: ${{ runner.os }}-${{ hashFiles('package.json') }}-electron-2

      - name: Cache electron 1
        id: cache-electron-1
        uses: actions/cache@v3
        with:
          path: electron
          key: ${{ runner.os }}-${{ hashFiles('package.json') }}-electron-1

      - name: Test
        working-directory: electron
        run: |
          touch 456 & pid=$! ; sleep 1s && kill $pid || true
          ls
      # - name: Build
      #   run: |
      #     npx e build electron:symbols & pid=$! ; sleep 14400 && kill $pid || true

  build3:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: macos-latest
            name: "darwin-x64"
          # - host: windows-latest
          #   name: "win32-ia32"

    name: stable - ${{ matrix.settings.name }} - node@16
    needs:
      - build2
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        shell: bash

    steps:
      # - uses: actions/checkout@v3

      # - uses: actions/checkout@v3
      #   with:
      #     repository: xltan/build-tools
      #     path: build-tools

      # - name: Setup node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16

      # - name: Install build-tools
      #   run: npm install

      # - uses: sinoru/actions-setup-xcode@v2
      #   with:
      #     xcode-version: "12.4"

      # - name: Init
      #   run: |
      #     npx e init release -i release --root=electron --fork xltan/electron --force

      - name: Cache electron 2
        id: cache-electron-2
        uses: actions/cache@v3
        with:
          path: electron
          key: ${{ runner.os }}-${{ hashFiles('package.json') }}-electron-2

      - name: Test
        working-directory: electron
        run: ls
      # - name: Build
      #   run: |
      #     npx e build electron:symbols
